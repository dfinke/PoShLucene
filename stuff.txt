class PulumiResult {
    $Type
    $Parent
    $Name
    $Help
        
    PulumiResult($Type, $Parent, $Name, $Help) {
        $this.Type=$Type
        $this.Parent=$Parent
        $this.Name=$Name
        $this.Help=$Help
    }
}

function DoParse {
    param(
        $cmd,
        $eyeCatcher,
        $parser
    )

    $found = $false
    switch ($cmd + ' --help' | iex) {
        $eyeCatcher { $found = $true; continue }
        {$found -and $_.length -eq 0 } {break}
        {$found} {                
            [pscustomobject](& $parser $_.trim() $cmd)
        }
    }
}

function Get-CLICommand {
    param ($cmd)      

    $parser = {
                param($t, $parent)
                
                [string]$cmdAndHelp = $t.trim() -replace "  +"," "
                $pos = $cmdAndHelp.IndexOf(' ')
                $cmdName=$cmdAndHelp.Substring(0,$pos)
                $help=$cmdAndHelp.Substring($pos+1)
                
                [PulumiResult]::new("Command", $cmd, $cmdName, $help)
    }

    DoParse $cmd "Available Commands:" $parser
}

function Get-CLIFlag {
    param ($cmd)

    $parser = {
                param($t)

                $pos  = $t.IndexOf('--')
                $epos = $t.IndexOf('  ', $pos)
                $flag = $t.substring($pos,($epos-$pos)).trim()
                $Help = $t.Substring($epos).trim()

                [PulumiResult]::new("Flag", $cmd, $flag, $help)
    }

    DoParse $cmd "Flags:" $parser

}

function DoSearch {
    param ($cmd)    

    foreach($c in Get-CLICommand $cmd) {
        $c
        foreach($f in Get-CLIFlag "$cmd $($c.Name)") {
            $f
        }

        DoSearch "$cmd $($c.Name)" $level
    }
}

DoSearch pulumi
